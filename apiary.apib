FORMAT: 1A

# Dashboardly
The Dashboardly API allows the creation and editing of bookmark boards that can be shared.

## Boards [/boards]
A board represents a dashboard composed of bookmarks.

### Retrieve a list of boards [GET /boards{?page,count}]

+ Parameters
    - page: `12` (number, optional) - The page number to fetch
        - Default: 1
    - count: `10` (number, optional) - The number of items to fetch
        - Default: 20

+ Response 200 (application/json)
    + Attributes
        - boards (array[BoardWithId,BoardWithId4])



### Retrieve a single board [GET /boards/{id}]

+ Parameters
    - id: `123` (number, required) - The ID of the desired board

+ Response 200 (application/json)
    + Attributes (BoardWithId)



### Retrieve the bookmarks for a single board [GET /boards/{id}/bookmarks]

+ Parameters
    - id: `123` (number, required) - The ID of the desired board

+ Response 200 (application/json)
    + Attributes
        - bookmarks (array[BookmarkWithId])



### Create a new board [POST]
Creating a new board requires passing a session token

+ Request (application/json)
    + Headers

            Authorization: token xyz

    + Attributes (Board)

+ Response 201 (application/json)
    + Attributes (BoardWithId2)



### Delete an owned board [DELETE /boards/{id}]
Deleting one's boards requires passing a session token

+ Parameters
    - id: `124` (number, required) - The unique ID of the board to be deleted

+ Request
    + Headers

            Authorization: token xyz

+ Response 204



### Modify an owned board [PATCH /boards/{id}]
Updating one's boards requires passing a session token. This endpoint only requires passing the data that changes.

+ Parameters
    - id: `12` (number, required) - The unique ID of the board to be updated

+ Request (application/json)
    + Headers

            Authorization: token xyz

    + Attributes (Board)

+ Response 200 (application/json)
    + Attributes (BoardWithId3)



### Create a new bookmark under a board [POST /boards/{id}/bookmarks]
Creating a bookmark requires passing a token that proves you are the owner for the board

+ Parameters
    - id: `12` (number, required) - The unique ID of the board for which to create a bookmark

+ Request (application/json)
    + Headers

            Authorization: token xyz

    + Attributes (Bookmark)

+ Response 201 (application/json)
    + Attributes (BookmarkWithId2)





## Bookmarks [/bookmarks]
A bookmark represents a link (url + title) inside a dashboard.

### Delete a bookmark [DELETE /bookmarks/{id}]
Deleting a bookmark requires passing a token that proves you are the owner of the board that owns that bookmark

+ Parameters
    - id: `55` (number, required) - The unique ID of the bookmark to delete

+ Request
    + Headers

            Authorization: token xyz

+ Response 204



### Modify a bookmark [PATCH /bookmarks/{id}]
Modifying a bookmark requires an access token proving you are the owner of the board for that bookmark

+ Parameters
    - id: `4954` (number, required) - The unique ID of the bookmark to update

+ Request (application/json)
    + Headers

            Authorization: token xyz

    + Attributes (Bookmark)

+ Response 200 (application/json)
    + Attributes (BookmarkWithId3)





## Authentication [/auth]

### Create a new user (signup) [POST /auth/users]
+ Request (application/json)
    + Attributes (AuthData)

+ Response 201 (application/json)
    + Attributes (UserWithId)



### Create a new session (login) [POST /auth/sessions]
+ Request (application/json)
    + Attributes (AuthData)

+ Response 201 (application/json)
    + Attributes (Session)



### Delete a session (logout) [DELETE /auth/sessions]
Requesting this endpoint will delete the session associated with the token in the `Authorization` header.

+ Request (application/json)
    + Headers

            Authorization: token xyz

+ Response 204



### Retrieve current user [GET /auth/me]
Requesting this endpoint with an Authorization token will return the user that this token belongs to.

+ Request
    + Headers
    
            Authorization: token xyz

+ Response 200 (application/json)
    + Attributes (UserWithId)




# Data Structures

## Timestamps (object)
- createdAt: `2015-01-20T09:48:32.066Z` (string) - The creation date
- updatedAt: `2017-05-04T14:29:42.490Z` (string) - The last update date

## Board (object)
- title: `Board for grandma` (string) - The name of the board
- description: `TestBoard creation`

## Board2 (object)
- title: `Board for grandpa` (string) - The name of the board
- description: `TestBoard creation2`

## Board3 (object)
- title: `We have updated the board` (string) - The name of the board
- description: `TestBoard creation3`

## Board4 (object)
- title: `New board on the basic list` (string) - The name of the board
- description: `Home Page Load`

## BoardWithId (object)
- id: `124` (number) - The unique ID of the board
- ownerId: `123` (number, required) - The unique ID of the user who owns the board
- Include Board
- Include Timestamps

## BoardWithId2 (object)
- id: `123` (number) - The unique ID of the board
- ownerId: `7` (number, required) - The unique ID of the user who owns the board
- Include Board2
- Include Timestamps

## BoardWithId3 (object)B
- id: `124` (number) - The unique ID of the board
- ownerId: `123` (number, required) - The unique ID of the user who owns the board
- Include Board3
- Include Timestamps

## BoardWithId4 (object)
- id: `125` (number) - The unique ID of the board
- ownerId: `7` (number, required) - The unique ID of the user who owns the board
- Include Board4
- Include Timestamps


## Bookmark (object)
- title: `Youtube kitten videos` (string, required) - The title of the bookmark
- url: `https://www.youtube.com/kittenz` (string, required) - The URL of the bookmark
- description: `This link will take you to the best place in the universe` - An optional description

## Bookmark2 (object)
- title: `Google: `
- url: `https://google.com` (string, required) - The URL of the bookmark
- description: `This link will take you to the GOOGLE` - An optional description


## Bookmark3 (object)
- title: `Google: `
- url: `https://google.com` (string, required) - The URL of the bookmark
- description: `This link will take you to the GOOGLE` - An optional description


## BookmarkWithId (object)
- id: `55` (number) - The unique ID of the bookmark
- boardId: `15` (number, required) - The unique ID of the board that the bookmark belongs to
- Include Bookmark
- Include Timestamps

## BookmarkWithId2 (object) 
- id: `552` (number) - The unique ID of the bookmark
- boardId: `15` (number, required) - The unique ID of the board that the bookmark belongs to
- Include Bookmark2
- Include Timestamps

## BookmarkWithId3 (object)
- id: `55` (number) - The unique ID of the bookmark
- boardId: `15` (number, required) - The unique ID of the board that the bookmark belongs to
- Include Bookmark3
- Include Timestamps

## AuthData (object)
- email: `hunter@thompson.com` (string) - The email that will be used as a login username
- password: `Hunter2` (string) - The desired password for the new user

## User (object)
- email: `hunter@thompson.com` (string) - The email of the user

## UserWithId (object)
- id: `123` (number) - The unique ID of the user
- Include User
- avatarUrl: `https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50` (string) - The profile pic of the user
- Include Timestamps

## Session (object)
- token: `uep52qo8wfyh97b24fjafjewi9bb0r24` (string) - The session token